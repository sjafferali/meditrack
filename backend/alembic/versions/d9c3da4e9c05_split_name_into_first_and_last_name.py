"""split_name_into_first_and_last_name

Revision ID: d9c3da4e9c05
Revises: 03586fa62d43
Create Date: 2025-06-27 12:55:35.781297

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d9c3da4e9c05"
down_revision: Union[str, None] = "03586fa62d43"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Clean up temporary table if it exists
    op.execute("DROP TABLE IF EXISTS _alembic_tmp_doses")

    # First add the new columns with nullable=True temporarily
    op.add_column("persons", sa.Column("first_name", sa.String(), nullable=True))
    op.add_column("persons", sa.Column("last_name", sa.String(), nullable=True))

    # Migrate data from name to first_name
    op.execute("UPDATE persons SET first_name = name")

    # Now make first_name non-nullable
    op.alter_column("persons", "first_name", existing_type=sa.String(), nullable=False)

    # Drop the old name column
    op.drop_column("persons", "name")

    # Fix dose table issues
    op.alter_column(
        "doses", "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
    )
    op.alter_column(
        "doses",
        "medication_name",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.alter_column(
        "doses",
        "taken_at",
        existing_type=sa.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add name column back
    op.add_column("persons", sa.Column("name", sa.VARCHAR(), nullable=True))

    # Migrate data back from first_name and last_name to name
    op.execute(
        "UPDATE persons SET name = CASE WHEN last_name IS NOT NULL THEN first_name || ' ' || last_name ELSE first_name END"
    )

    # Make name non-nullable
    op.alter_column("persons", "name", existing_type=sa.VARCHAR(), nullable=False)

    # Drop the new columns
    op.drop_column("persons", "last_name")
    op.drop_column("persons", "first_name")

    # Revert dose table changes
    op.alter_column(
        "doses",
        "taken_at",
        existing_type=sa.DateTime(timezone=True),
        type_=sa.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "doses",
        "medication_name",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
